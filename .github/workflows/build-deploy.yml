name: Build and Deploy Code

on: 
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    environment:
      name: testing
    env:
      # App Backend
      ENV: ${{ secrets.ENV }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      POSTGRES_DB: ${{secrets.DATABASE_NAME}}  
      POSTGRES_USER: ${{secrets.DATABASE_USER}}
      POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
    
    services:
      postgres:
        image: postgres
        env:
          # Postgres
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_${{ secrets.ENV }}
          POSTGRES_USER: ${{secrets.DATABASE_USER}}
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Imprimir PYTHONPATH
        run: echo $PYTHONPATH

      - name: pulling(Checkout) git repo.
        uses: actions/checkout@v3
      
      - name: Set up Python version 3.10
        uses: actions/setup-python@v5
        with:
            python-version: '3.10'
      
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true    

      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: | # Pipe character allows us to run multiple commands.
          source .venv/bin/activate
          export PYTHONPATH="$PWD:$PYTHONPATH"  # Agrega el directorio del proyecto al PYTHONPATH
          coverage run -m pytest
          coverage report

      #----------------------------------------------
      #              Docker containerization
      #----------------------------------------------
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/investmentsapp:latest

  deploy:
    runs-on: ubuntu-lastest
    needs: [build]

    steps:
      - name: deploying stuff
        run: echo "going to deploy some stuff"


